version: "3.7"
services:
  application:
    image: ${DEV_IMAGE}
    container_name: ${ALIAS}-application
    restart: on-failure
    volumes:
      - application_home:/home/developer
      - ~/.ssh:/home/developer/.ssh
      - ../:/application
      - ./dev/config/php/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
    ports:
      - 8888:8888
    environment:
      - PHP_IDE_CONFIG=serverName=developer.local
    networks:
      application:
        aliases:
          - core
          - ${ALIAS}-application
#      dmo:
#        aliases:
#          - ${ALIAS}-application

  server:
    image: nginx:1.16.1
    container_name: ${ALIAS}-nginx
    restart: on-failure
    working_dir: /application
    volumes:
      - ../:/application
      - ./dev/config/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      application:
        aliases:
          - ${ALIAS}-nginx
#      dmo:
#        aliases:
#          - ${ALIAS}-nginx

#  rabbitmq:
#    build:
#      context: dev/config/rabbitmq
#    container_name: ${ALIAS}-rabbitmq
#    restart: on-failure
#    volumes:
#      - amqp_rabbitmq:/var/lib/rabbitmq
#    environment:
#      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
#      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
#      RABBITMQ_NODENAME: ${RABBITMQ_NODENAME}
##    ports:
##      - 5672:5672
##      - 15672:15672
#    networks:
#      application:
#        aliases:
#          - ${ALIAS}-rabbitmq

#  redis:
#    image: redis:5.0.7
#    container_name: ${ALIAS}-redis
#    restart: on-failure
#    volumes:
#      - redis:/data
#    networks:
#      application:
#        aliases:
#          - ${ALIAS}-redis
#
#  redis-commander:
#    image: rediscommander/redis-commander:latest
#    container_name: ${ALIAS}-redis-commander
#    restart: on-failure
#    environment:
#      REDIS_HOSTS: local:${ALIAS}-redis:6379
##    ports:
##      - 8081:8081
#    networks:
#      application:
#        aliases:
#          - ${ALIAS}-redis-commander
#
#  grafana:
#    image: grafana/grafana:7.0.0
#    container_name: ${ALIAS}-grafana
#    restart: on-failure
#    environment:
#      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASS}
#    volumes:
#      - grafana:/var/lib/grafana
#      - ./logs/grafana:/var/log/grafana
##    ports:
##      - 3000:3000
#    networks:
#      application:
#        aliases:
#          - ${ALIAS}-grafana
#
#  prometheus:
#    image: prom/prometheus:v2.19.2
#    container_name: ${ALIAS}-prometheus
#    restart: on-failure
#    volumes:
#      - prometheus:/prometheus
##      - ./dev/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    command:
#      - '--storage.tsdb.retention.time=7d'
#      - '--config.file=/etc/prometheus/prometheus.yml'
##    ports:
##      - 9090:9090
#    networks:
#      application:
#        aliases:
#          - ${ALIAS}-prometheus
#
#  pgadmin4:
#    image: dpage/pgadmin4:4
#    container_name: ${ALIAS}-pgadmin4
#    restart: on-failure
#    volumes:
#      - pgadmin4:/var/lib/pgadmin
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASS}
#    ports:
#      - 10000:80
#    networks:
#      application:
#        aliases:
#          - ${ALIAS}-pgadmin
#
#  database-postgres:
#    image: postgres:10.11 # version for Azure DB PaaS
#    # image: postgres:11.6
#    # image: postgres:12.0
#    container_name: ${ALIAS}-database-postgres
#    restart: on-failure
#    volumes:
#      - database_postgres:/var/lib/postgresql/data
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_DB}
##    ports:
##      - 5432:5432
#    networks:
#      application:
#        aliases:
#          - ${ALIAS}-database-postgres
#
#  adminer:
#    image: adminer:4.7.7
#    container_name: ${ALIAS}-adminer
#    restart: on-failure
#    environment:
#      ADMINER_DEFAULT_SERVER: ${ALIAS}-database-mysql
#    ports:
#      - 8080:8080
#    networks:
#      application:
#        aliases:
#          - ${ALIAS}-adminer
#
#  phpmyadmin:
#    image: phpmyadmin/phpmyadmin:5.0.2
#    container_name: ${ALIAS}-phpmyadmin
#    restart: on-failure
#    environment:
#      PMA_ARBITRARY: 1
#      PMA_HOSTS: |
#        ${ALIAS}-database-mysql,
##        xx-database-mysql,
##        yy-database-mysql,
##        zz-database-mysql,
#    ports:
#      - 86:80
#    networks:
#      application:
#        aliases:
#          - ${ALIAS}-phpmyadmin
#
#  database-mysql:
#    #image: mysql:5.6.47
#    image: mysql:5.7.29 # present version for Azure DB PaaS
#    # image: mysql:8.0.15
#    container_name: ${ALIAS}-database-mysql
#    restart: on-failure
#    environment:
#      - MYSQL_DATABASE=${MYSQL_DATABASE}
#      - MYSQL_USER=${MYSQL_USER}
#      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#    volumes:
#      - database_mysql:/var/lib/mysql
#      - ./dev/config/mysql/mysql.cnf:/etc/mysql/conf.d/docker.cnf
##    ports:
##      - 3306:3306
#    command: --default-authentication-plugin=mysql_native_password
#    networks:
#      application:
#        aliases:
#          - ${ALIAS}-database-mysql
#
#  mongo-express:
#    image: mongo-express:0.54
#    container_name: ${ALIAS}-mongo-express
#    restart: on-failure
#    links:
#      - ${ALIAS}-database-mongo:mongo
#    ports:
#      - 8888:8081
#    networks:
#      application:
#        aliases:
#          - ${ALIAS}-mongo-express
#
#  database-mongo:
#    image: mongo:4.2.3-bionic
#    container_name: ${ALIAS}-database-mongo
#    restart: on-failure
#    volumes:
#      - database_mongo:/data/db
##    ports:
##      - 27029:27017
#    networks:
#      application:
#        aliases:
#          - ${ALIAS}-database-mongo



networks:
  application:
    name: ${ALIAS}
#  dmo:
#    name: dmo

volumes:
  application_home:
    name: ${ALIAS}-application-home
#  database_mysql:
#    name: ${ALIAS}-database-mysql
#  database_mongo:
#    name: ${ALIAS}-database-mongo
#  database_postgres:
#    name: ${ALIAS}-database-postgres
#  amqp_rabbitmq:
#    name: ${ALIAS}-amqp-rabbitmq
#  pgadmin4:
#    name: ${ALIAS}-pgadmin4
#  redis:
#    name: ${ALIAS}-redis
#  grafana:
#    name: ${ALIAS}-grafana
#  prometheus:
#    name: ${ALIAS}-prometheus
